# -*- coding: utf-8 -*-
"""Logistic_Regression_Scratch.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17pUhI_5DglHT5zjMgMvJLEyJzyvBqIT5

# Logistic Regression on Iris Dataset.

## Linear Discriminant Analysis
"""

#preprocessing  libraries
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
# algorithm libraries
from sklearn.discriminant_analysis import LinearDiscriminantAnalysis as LDA
from sklearn.multiclass import OneVsOneClassifier
from sklearn.multiclass import OneVsRestClassifier
# metric libraries
from sklearn.metrics import classification_report
from sklearn.metrics import accuracy_score

names = ['sepal-length', 'sepal-width', 'petal-length', 'petal-width', 'class']
df = pd.read_csv("iris.data.csv", names=names)
target = df.iloc[:,-1]

df

target.replace('Iris-setosa', -1, inplace = True)
target.replace('Iris-versicolor', 0, inplace = True)
target.replace('Iris-virginica', 1, inplace = True)
target.head()

df = df.drop(columns = ['class'])
df.head()

X_train, X_test, y_train, y_test = train_test_split(df, target, test_size = 0.2)

#One vs One Classifier
lda = LDA(n_components = 1)
# define ovo strategy
ovo = OneVsOneClassifier(lda)
# fit model
ovo.fit(X_train, y_train)
# make predictions
y_pred = ovo.predict(X_test)

#One vs One Model evaluation metrics
target_names = ['Iris_Setosa', 'Iris-Versicolor', 'Iris-Virginica']
print(classification_report(y_test, y_pred, target_names=target_names))

#One vs Rest Classifier
lda_2 = LDA(n_components = 1)
#define ovr strategy
ovr = OneVsRestClassifier(lda)
#fit model
ovr.fit(X_train, y_train)
#make predictions
y_pred_2 = ovr.predict(X_test)

#One vs Rest Model evaluation metrics
target_names = ['Iris_Setosa', 'Iris-Versicolor', 'Iris-Virginica']
print(classification_report(y_test, y_pred_2, target_names=target_names))

