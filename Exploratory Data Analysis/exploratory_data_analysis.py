# -*- coding: utf-8 -*-
"""Exploratory_Data_Analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HWqMvT2pgd0fw9U6EvB09wjTVvfvIXrD

# Exploratory Data Analysis

## Tasks
##### 1-Load the “breast-cancer-wisconsin.data.csv” from canvas into R and perform the EDA analysis by:
##### I.	Summarizing each column (e.g. min, max, mean )
##### II.	Identifying missing values
##### III.	Replacing the missing values with the “mean” of the column.
##### IV.	Displaying the frequency table of “Class” vs. F6
##### V.	Displaying the scatter plot of F1 to F6, one pair at a time
##### VI.	Show histogram box plot for columns F7 to F9
##### 2- Delete all the objects from your R- environment. Reload the “breast-cancer-wisconsin.data.csv” from canvas into R. Remove any row with a missing value in any of the columns.

### Load Packages
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

"""### Load the “breast-cancer-wisconsin.data.csv”"""

# Loading the dataset
df = pd.read_csv("breast-cancer-wisconsin.csv")

# Displaying the entire data set
df

"""###  I. Summarizing each column (e.g. min, max, mean )"""

# Summarizing the dataset
df.describe(include = 'all')

"""### II. Identifying missing values"""

# Finding the missing values
missingvalues = df[df.eq("?").any(1)]

missingvalues

"""### III. Replacing the missing values with the “mean” of the column."""

# Converting the missing values denoted by '?' to NaN
df = df.replace({'?': np.NaN})
# Replacing NaN values with the mean values.
df["F6"] = pd.to_numeric(df["F6"])
df['F6'].fillna(df['F6'].mean(), inplace=True)

#Checking if column F6 has any null values
df['F6'].isnull().sum()

"""### IV. Displaying the frequency table of “Class” vs. F6"""

# Frequency tables Class vs F6
pd.crosstab(columns=df['Class'], index=df['F6'])

"""### V. Displaying the scatter plot of F1 to F6, one pair at a time"""

x_axis = ['F1', 'F2', 'F3', 'F4', 'F5', 'F6']
y_axis = ['F1', 'F2', 'F3', 'F4', 'F5', 'F6']

for x in x_axis:
    for y in y_axis:
        if x != y:
            plt.scatter(df[x],df[y])
            plt.xlabel(x)
            plt.ylabel(y)
            plt.show()

"""### VI. Show histogram box plot for columns F7 to F9"""

columns = ['F7','F8','F9']
for col in columns:
    plt.hist(df[col])
    plt.xlabel(col)
    plt.show()